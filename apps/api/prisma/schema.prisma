generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id          Int        @id @default(autoincrement())
  email       String     @unique
  name        String?
  password    String?
  phoneNumber String?
  address     String?
  token       String?
  profile     String?
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  roles       Role[]
  solutions   Solution[]
}

model Role {
  id        Int      @id @default(autoincrement())
  name      String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  users     User[]
}

model Call {
  id          Int        @id @default(autoincrement())
  name        String     @db.Text
  startedAt   DateTime
  endedAt     DateTime
  description String     @db.Text
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  thematics   Thematic[]
  solutions   Solution[]
}

model Thematic {
  id         Int         @id @default(autoincrement())
  name       String      @db.Text
  odds       String
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @updatedAt
  solutions  Solution[]
  calls      Call[]
  challenges Challenge[]
}

model Solution {
  id              Int         @id @default(autoincrement())
  name            String      @db.Text
  videoLink       String?
  imageLink       String?
  description     String      @db.Text
  call            Call        @relation(fields: [callId], references: [id])
  callId          Int
  thematic        Thematic    @relation(fields: [thematicId], references: [id])
  thematicId      Int
  challenges      Challenge[]
  targetedProblem String      @db.Text
  status          Status      @relation(fields: [statusId], references: [id])
  statusId        Int
  maturity        Maturity    @relation(fields: [maturityId], references: [id])
  maturityId      Int
  createdAt       DateTime    @default(now())
  updatedAt       DateTime    @updatedAt
  user            User?       @relation(fields: [userId], references: [id])
  userId          Int?
}

model Maturity {
  id        Int        @id @default(autoincrement())
  name      String     @db.Text
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  Solution  Solution[]
}

model Status {
  id        Int        @id @default(autoincrement())
  name      String
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  solutions Solution[]
}

model Challenge {
  id        Int        @id @default(autoincrement())
  name      String     @db.Text
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  thematics Thematic[]
  solutions Solution[]
}
